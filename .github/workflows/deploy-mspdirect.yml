# This is a deployment workflow to deploy a selected release in selcted environment
# Steps Shold be:
# 1. Determine the image digest from release number

name: deploy-mspdirect

env:
  # üñäÔ∏è EDIT your repository secrets to log into your OpenShift cluster and set up the context.
  # See https://github.com/redhat-actions/oc-login#readme for how to retrieve these values.
  # To get a permanent token, refer to https://github.com/redhat-actions/oc-login/wiki/Using-a-Service-Account-for-GitHub-Actions
  OPENSHIFT_SERVER: ${{ secrets.C5839F_OPENSHIFT_SERVER }}
  OPENSHIFT_TOKEN: ${{ secrets.C5839F_OPENSHIFT_GITHUB_ACTIONS_SA_TOKEN }}
  # üñäÔ∏è EDIT to set the kube context's namespace after login. Leave blank to use your user's default namespace.
  OPENSHIFT_NAMESPACE: "c5839f-"
  DEFAULT_NAMESPACE: "c5839f-tools"
  VERSION: "Draft_1.0_"
  IMAGE:



# Controls when the workflow will run
on:
  push:
    branch:
      [5492-release-process]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      Environment:
        type: choice
        description: Select an environment to deploy
        options:
        - Dev
        - Test
      Branch:
        description: 'Enter branch name (For now releases are created only on main branch)'
        required: true
        default: main
      Release:
        description: 'Enter build number: '
        required: true
        default: 11
               

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install oc
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: 4

      - name: Determine Namespace and Build
        run: |
          echo "OPENSHIFT_NAMESPACE=${{ env.OPENSHIFT_NAMESPACE }}${{ github.event.inputs.Environment }}"  | tee -a $GITHUB_ENV
          echo "VERSION=${{ env.VERSION }}${{ github.event.inputs.Branch }}_${{ github.event.inputs.Release }}"  | tee -a $GITHUB_ENV

      # https://github.com/redhat-actions/oc-login#readme
      - name: Log in to OpenShift
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ env.OPENSHIFT_SERVER }}
          openshift_token: ${{ env.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: ${{ env.DEFAULT_NAMESPACE }}

      - name: Find image
        run: |
          oc project
          echo "IMAGE=$(oc get istag/mspdirect-frontend:${{ env.VERSION }} -o jsonpath={.image.metadata.name})" | tee -a $GITHUB_ENV

      - name: Validate image
        uses: actions/github-script@v4
        with:
          script: |
            if (`${{ env.IMAGE }}`.length == 0) {
              core.setFailed(`‚ùå Image version: ${{ env.VERSION }}. \n` +
                "Please provide a valid image build number." );
            }
            else {
              core.info(`‚úÖ Valid image found.`);
            }
          