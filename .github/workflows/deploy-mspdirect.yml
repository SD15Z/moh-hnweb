# This is a deployment workflow to deploy a selected release in selcted environment
# Steps Shold be:
# 1. Login to OpenShift
# 2. Find the image digest from input parameters
# 3. Validate if that is correct. If not, exit the job
# 4. Push the image to selected repository
# 5. Edit the selcted Argo CD manifest file



name: deploy-mspdirect

env:
  OPENSHIFT_SERVER: ${{ secrets.C5839F_OPENSHIFT_SERVER }}
  OPENSHIFT_TOKEN: ${{ secrets.C5839F_OPENSHIFT_GITHUB_ACTIONS_SA_TOKEN }}
  DEFAULT_NAMESPACE: "c5839f-tools"
  VERSION: "Draft_1.0_"
  OPENSHIFT_NAMESPACE:
  FRONTEND_IMAGE:
  BACKEND_IMAGE:



# Controls when the workflow will run
on:
  push:
    branch:
      [5492-release-process]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      Environment:
        type: choice
        description: Select an environment to deploy
        options:
        - Dev
        - Test
      Branch:
        description: 'Enter branch name (For now releases are created only on main branch)'
        required: true
        default: main
      Release:
        description: 'Enter build number: '
        required: true
        default: 11
               

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest


    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # 1. Login to OpenShift
      - name: Log in to OpenShift
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ env.OPENSHIFT_SERVER }}
          openshift_token: ${{ env.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: ${{ env.DEFAULT_NAMESPACE }}
      # 2. Find the namespace and image digest from input parameters
      - name: Compute namespace
        id: set-namespace
        uses: actions/github-script@v5
        with:
          script: |
            if (`${{ github.event.inputs.Environment }}` == 'Dev') {
              return "c5839f-dev"
            }
            if (`${{ github.event.inputs.Environment }}` == 'Test' || `${{ github.event.inputs.Environment }}` == 'UAT') {
              return "c5839f-test"
            }

      - name: Compute Version image
        run: |
          echo "OPENSHIFT_NAMESPACE=${{steps.set-namespace.outputs.result}}"  | tee -a $GITHUB_ENV
          echo "VERSION=${{ env.VERSION }}${{ github.event.inputs.Branch }}_${{ github.event.inputs.Release }}"  | tee -a $GITHUB_ENV

      - name: Find image
        run: |
          oc project
          echo "FRONTEND_IMAGE=$(oc get istag/mspdirect-frontend:${{ env.VERSION }} -o jsonpath={.image.metadata.name})" | tee -a $GITHUB_ENV
          echo "BACKEND_IMAGE=$(oc get istag/mspdirect-backend:${{ env.VERSION }} -o jsonpath={.image.metadata.name})" | tee -a $GITHUB_ENV

      # 3. Validate if that is correct. If not, exit the job
      - name: Validate image
        uses: actions/github-script@v4
        with:
          script: |
            if (`${{ env.FRONTEND_IMAGE }}`.length == 0 || `${{ env.BACKEND_IMAGE }}`.length == 0) {
              core.setFailed(`❌ Image version: ${{ env.VERSION }}. \n` +
                "Please provide a valid image build number." );
            }
            else {
              core.info(`✅ Valid image found.`);
            }
      # 4. Push the image to selected repository
      - name: Push Image
        run: |
          oc tag mspdirect-frontend:${{ env.VERSION }} ${{ env.OPENSHIFT_NAMESPACE }}/mspdirect-frontend:${{ env.VERSION }}
          oc tag mspdirect-backend:${{ env.VERSION }} ${{ env.OPENSHIFT_NAMESPACE }}/mspdirect-backend:${{ env.VERSION }}

      # 5. Edit the selcted Argo CD manifest file
      # Update the image ID in the manifest repository used by Argo CD.
      # We need to use the SSH deploy key to check out the manifest repo, set up
      # Kustomize in the runner, update the image ID, commit the change, and
      # push the changes back to the manifest repository.
      # ------------------------------------------------------------------------
      - name: Prepare deploy key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.GITOPS_C5839F_PRIVATE_KEY }}

      - name: Check out manifest repo
        uses: actions/checkout@v2
        with:
          ssh-key: ${{ secrets.GITOPS_C5839F_PRIVATE_KEY }}
          repository: ${{ secrets.GITOPS_C5839F_REPO }}
          ref: main

      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v1

      - name: Update image ID and commit change
        #if: ${{ success() }}
        if: ${{ 'true' == 'false' }}
        run: |
          cd mspdirect-devops/overlays/test
          kustomize edit set image "backend-image=image-registry.openshift-image-registry.svc:5000/c5839f-tools/${{ env.IMAGE_NAME }}@${{ steps.push-image.outputs.digest }}"
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -am "Update Backend API image ID for test"
          git push origin    
          